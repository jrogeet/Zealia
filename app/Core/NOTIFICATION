// app/Models/Notification.php
<?php

// namespace App\Models;

// class Notification {
//     private $db;

//     public function __construct($db) {
//         $this->db = $db;
//     }

//     public function getUnreadNotifications($userId) {
//         $query = "SELECT * FROM notifications 
//                  WHERE user_id = :userId 
//                  AND read_status = 0 
//                  ORDER BY created_at DESC";
                 
//         $stmt = $this->db->prepare($query);
//         $stmt->execute(['userId' => $userId]);
//         return $stmt->fetchAll();
//     }

//     public function markAsRead($notificationId) {
//         $query = "UPDATE notifications 
//                  SET read_status = 1 
//                  WHERE id = :id";
                 
//         $stmt = $this->db->prepare($query);
//         return $stmt->execute(['id' => $notificationId]);
//     }
// }

// // app/Controllers/NotificationController.php
// <?php

// namespace App\Controllers;

// class NotificationController {
//     private $notificationModel;

//     public function __construct($db) {
//         $this->notificationModel = new \App\Models\Notification($db);
//     }

//     public function stream() {
//         header('Content-Type: text/event-stream');
//         header('Cache-Control: no-cache');
//         header('Connection: keep-alive');

//         // Assuming you have a session-based auth system
//         $userId = $_SESSION['user_id'] ?? null;
        
//         if (!$userId) {
//             echo "data: " . json_encode(['error' => 'Unauthorized']) . "\n\n";
//             exit();
//         }

//         while (true) {
//             $notifications = $this->notificationModel->getUnreadNotifications($userId);
            
//             echo "data: " . json_encode([
//                 'notifications' => $notifications,
//                 'count' => count($notifications)
//             ]) . "\n\n";
            
//             ob_flush();
//             flush();
            
//             sleep(5); // Wait 5 seconds before next check
//         }
//     }

//     public function markAsRead() {
//         $notificationId = $_POST['notification_id'] ?? null;
        
//         if ($notificationId) {
//             $success = $this->notificationModel->markAsRead($notificationId);
//             echo json_encode(['success' => $success]);
//         }
//     }
// }

// // routes.php
// <?php

// $router->get('/notifications/stream', 'NotificationController@stream');
// $router->post('/notifications/mark-as-read', 'NotificationController@markAsRead');

// // views/partials/navigation.php
// <nav class="main-nav">
//     <!-- Your existing navigation items -->
//     <div class="notifications-container">
//         <button id="notificationBtn" class="notification-btn">
//             <span class="notification-icon">ðŸ””</span>
//             <span id="notificationCount" class="count">0</span>
//         </button>
//         <div id="notificationDropdown" class="dropdown hidden">
//             <div id="notificationList"></div>
//         </div>
//     </div>
// </nav>

// // public/js/notifications.js
// class NotificationManager {
//     constructor() {
//         this.eventSource = null;
//         this.notificationBtn = document.getElementById('notificationBtn');
//         this.notificationCount = document.getElementById('notificationCount');
//         this.notificationList = document.getElementById('notificationList');
//         this.notificationDropdown = document.getElementById('notificationDropdown');
        
//         this.initializeEventSource();
//         this.initializeEventListeners();
//     }

//     initializeEventSource() {
//         this.eventSource = new EventSource('/notifications/stream');
        
//         this.eventSource.onmessage = (event) => {
//             const data = JSON.parse(event.data);
//             this.updateNotifications(data);
//         };

//         this.eventSource.onerror = (error) => {
//             console.error('SSE Error:', error);
//             this.eventSource.close();
            
//             // Attempt to reconnect after 5 seconds
//             setTimeout(() => this.initializeEventSource(), 5000);
//         };
//     }

//     initializeEventListeners() {
//         this.notificationBtn.addEventListener('click', () => {
//             this.notificationDropdown.classList.toggle('hidden');
//         });

//         // Close dropdown when clicking outside
//         document.addEventListener('click', (e) => {
//             if (!this.notificationDropdown.contains(e.target) && 
//                 !this.notificationBtn.contains(e.target)) {
//                 this.notificationDropdown.classList.add('hidden');
//             }
//         });
//     }

//     updateNotifications(data) {
//         this.notificationCount.textContent = data.count;
        
//         if (data.notifications.length === 0) {
//             this.notificationList.innerHTML = '<div class="no-notifications">No new notifications</div>';
//             return;
//         }

//         this.notificationList.innerHTML = data.notifications
//             .map(notification => this.createNotificationElement(notification))
//             .join('');
//     }

//     createNotificationElement(notification) {
//         return `
//             <div class="notification-item" data-id="${notification.id}">
//                 <div class="notification-content">
//                     ${notification.message}
//                 </div>
//                 <div class="notification-time">
//                     ${new Date(notification.created_at).toLocaleString()}
//                 </div>
//                 <button onclick="notificationManager.markAsRead(${notification.id})" 
//                         class="mark-as-read">
//                     Mark as read
//                 </button>
//             </div>
//         `;
//     }

//     async markAsRead(notificationId) {
//         try {
//             const response = await fetch('/notifications/mark-as-read', {
//                 method: 'POST',
//                 headers: {
//                     'Content-Type': 'application/json',
//                 },
//                 body: JSON.stringify({ notification_id: notificationId })
//             });
            
//             if (response.ok) {
//                 const element = document.querySelector(`[data-id="${notificationId}"]`);
//                 if (element) {
//                     element.remove();
//                 }
                
//                 // Update count
//                 const currentCount = parseInt(this.notificationCount.textContent);
//                 this.notificationCount.textContent = Math.max(0, currentCount - 1);
//             }
//         } catch (error) {
//             console.error('Error marking notification as read:', error);
//         }
//     }
// }

// // public/css/notifications.css
// .notifications-container {
//     position: relative;
//     display: inline-block;
// }

// .notification-btn {
//     background: none;
//     border: none;
//     cursor: pointer;
//     position: relative;
// }

// .count {
//     position: absolute;
//     top: -8px;
//     right: -8px;
//     background-color: red;
//     color: white;
//     border-radius: 50%;
//     padding: 2px 6px;
//     font-size: 12px;
// }

// .dropdown {
//     position: absolute;
//     right: 0;
//     top: 100%;
//     width: 300px;
//     background: white;
//     border: 1px solid #ddd;
//     border-radius: 4px;
//     box-shadow: 0 2px 4px rgba(0,0,0,0.1);
//     max-height: 400px;
//     overflow-y: auto;
// }

// .hidden {
//     display: none;
// }

// .notification-item {
//     padding: 10px;
//     border-bottom: 1px solid #eee;
// }

// .notification-content {
//     margin-bottom: 5px;
// }

// .notification-time {
//     font-size: 12px;
//     color: #666;
// }

// .mark-as-read {
//     font-size: 12px;
//     color: blue;
//     background: none;
//     border: none;
//     cursor: pointer;
//     padding: 0;
//     margin-top: 5px;
// }

// .no-notifications {
//     padding: 20px;
//     text-align: center;
//     color: #666;
// }